name: "Release - Step 1: Prepare CDN Pre-Release, Publish NPM"

on:
    workflow_dispatch:
        inputs:
            dryRun:
                description: 'Do a dry run to preview instead of a real release [true/false]'
                required: true
                type: boolean
                default: true

jobs:
    # SDK release is done from master branch.
    confirm-public-repo-master-branch:
        name: 'Confirm release is run from public/master branch'
        uses: mParticle/mparticle-workflows/.github/workflows/sdk-release-repo-branch-check.yml@main

    build-bundle:
        name: Build Distribution Bundle
        runs-on: ubuntu-latest
        needs: confirm-public-repo-master-branch
        steps:
            - name: Checkout
              uses: actions/checkout@v3
              with:
                  ref: development

            - name: NPM install
              uses: actions/setup-node@v3
              with:
                  node-version: 16.x

            - name: Run NPM CI
              run: npm ci

            - name: Lint with ESLint
              run: npm run lint

            - name: Lint with Prettier
              run: npm run prettier

            - name: Run Build IIFE
              run: npm run build:iife

            - name: Display Bundle Diff, but Fancy!
              run: git diff --unified=3 dist/mparticle.js | npx diff-so-fancy

            - name: Archive npm failure logs
              uses: actions/upload-artifact@v2
              if: failure()
              with:
                    name: npm-logs
                    path: ~/.npm/_logs

    create-pre-release-branch:
        name: Create release branch
        runs-on: ubuntu-latest
        needs:
            - confirm-public-repo-master-branch
        steps:
            - name: Checkout development branch
            # TODO: This should be v3
              uses: actions/checkout@v2
              with:
                  repository: ${{ github.repository }}
                  ref: development

            - name: Create and push release branch
              run: |
                  git checkout -b pre-release/${{ github.run_number }}
                  git push origin pre-release/${{ github.run_number }}

    pre-release:
        name: Perform Pre-Release
        runs-on: ubuntu-latest
        needs:
            - create-pre-release-branch
        env:
            GITHUB_TOKEN: ${{ secrets.TEST_MP_SEMANTIC_RELEASE_BOT }}

        steps:
            - name: Checkout master branch
              uses: actions/checkout@v3
              with:
                fetch-depth: 0
                ref: master

            - name: Merge pre-release branch into local master branch
              run: |
                  git pull origin pre-release/${{ github.run_number }}

            - name: Setup Node.js
              uses: actions/setup-node@v3
              with:
                node-version: 16.x

            - name: Install dependencies
              run: npm ci

            - name: Release --dry-run
              if: ${{ github.event.inputs.dryRun == 'true'}}
              run: |
                npx semantic-release --dry-run

            # NPM Publish happens here
            - name: Release
            #   if: ${{ github.event.inputs.dryRun == 'false'}}
            # TODO: This should exit if the release doesn't happen
              run: |
                npx semantic-release

            - name: Get Package Version Number
              uses: martinbeentjes/npm-get-version-action@3cf273023a0dda27efcd3164bdfb51908dd46a5b #v1.3.1
              id: packageJsonVersion

            - name: Archive npm failure logs
              uses: actions/upload-artifact@v3
              if: failure()
              with:
                  name: npm-logs
                  path: ~/.npm/_logs

            - name: Push automated release commits to release branch
              if: ${{ github.event.inputs.dryRun == 'false' }}
              run: |
                    git push origin HEAD:release/${{ steps.packageJsonVersion.outputs.current-version }}    
            
            - name: Delete pre-release branch
              if: ${{ github.event.inputs.dryRun == 'false' }}
              run: |
                git push --delete origin pre-release/${{ github.run_number }}